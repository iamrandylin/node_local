{"ast":null,"code":"var _jsxFileName = \"/home/iamrandylin2/uni3/uniswap-interface/src/components/Popups/PopupItem.tsx\";\nimport React, { useCallback, useContext, useEffect } from 'react';\nimport { X } from 'react-feather';\nimport { useSpring } from 'react-spring/web';\nimport styled, { ThemeContext } from 'styled-components';\nimport { animated } from 'react-spring';\nimport { useRemovePopup } from '../../state/application/hooks';\nimport ListUpdatePopup from './ListUpdatePopup';\nimport TransactionPopup from './TransactionPopup';\nexport const StyledClose = styled(X)`\n  position: absolute;\n  right: 10px;\n  top: 10px;\n\n  :hover {\n    cursor: pointer;\n  }\n`;\nexport const Popup = styled.div`\n  display: inline-block;\n  width: 100%;\n  padding: 1em;\n  background-color: ${({\n  theme\n}) => theme.bg1};\n  position: relative;\n  border-radius: 10px;\n  padding: 20px;\n  padding-right: 35px;\n  overflow: hidden;\n\n  ${({\n  theme\n}) => theme.mediaWidth.upToSmall`\n    min-width: 290px;\n  `}\n`;\nconst Fader = styled.div`\n  position: absolute;\n  bottom: 0px;\n  left: 0px;\n  width: 100%;\n  height: 2px;\n  background-color: ${({\n  theme\n}) => theme.bg3};\n`;\nconst AnimatedFader = animated(Fader);\nexport default function PopupItem({\n  removeAfterMs,\n  content,\n  popKey\n}) {\n  const removePopup = useRemovePopup();\n  const removeThisPopup = useCallback(() => removePopup(popKey), [popKey, removePopup]);\n  useEffect(() => {\n    if (removeAfterMs === null) return;\n    const timeout = setTimeout(() => {\n      removeThisPopup();\n    }, removeAfterMs);\n    return () => {\n      clearTimeout(timeout);\n    };\n  }, [removeAfterMs, removeThisPopup]);\n  const theme = useContext(ThemeContext);\n  let popupContent;\n\n  if ('txn' in content) {\n    const {\n      txn: {\n        hash,\n        success,\n        summary\n      }\n    } = content;\n    popupContent = /*#__PURE__*/React.createElement(TransactionPopup, {\n      hash: hash,\n      success: success,\n      summary: summary,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 20\n      }\n    });\n  } else if ('listUpdate' in content) {\n    const {\n      listUpdate: {\n        listUrl,\n        oldList,\n        newList,\n        auto\n      }\n    } = content;\n    popupContent = /*#__PURE__*/React.createElement(ListUpdatePopup, {\n      popKey: popKey,\n      listUrl: listUrl,\n      oldList: oldList,\n      newList: newList,\n      auto: auto,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 20\n      }\n    });\n  }\n\n  const faderStyle = useSpring({\n    from: {\n      width: '100%'\n    },\n    to: {\n      width: '0%'\n    },\n    config: {\n      duration: removeAfterMs\n    }\n  });\n  return /*#__PURE__*/React.createElement(Popup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(StyledClose, {\n    color: theme.text2,\n    onClick: removeThisPopup,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  }), popupContent, removeAfterMs !== null ? /*#__PURE__*/React.createElement(AnimatedFader, {\n    style: faderStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 33\n    }\n  }) : null);\n}","map":{"version":3,"sources":["/home/iamrandylin2/uni3/uniswap-interface/src/components/Popups/PopupItem.tsx"],"names":["React","useCallback","useContext","useEffect","X","useSpring","styled","ThemeContext","animated","useRemovePopup","ListUpdatePopup","TransactionPopup","StyledClose","Popup","div","theme","bg1","mediaWidth","upToSmall","Fader","bg3","AnimatedFader","PopupItem","removeAfterMs","content","popKey","removePopup","removeThisPopup","timeout","setTimeout","clearTimeout","popupContent","txn","hash","success","summary","listUpdate","listUrl","oldList","newList","auto","faderStyle","from","width","to","config","duration","text2"],"mappings":"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","sourcesContent":["import React, { useCallback, useContext, useEffect } from 'react'\nimport { X } from 'react-feather'\nimport { useSpring } from 'react-spring/web'\nimport styled, { ThemeContext } from 'styled-components'\nimport { animated } from 'react-spring'\nimport { PopupContent } from '../../state/application/actions'\nimport { useRemovePopup } from '../../state/application/hooks'\nimport ListUpdatePopup from './ListUpdatePopup'\nimport TransactionPopup from './TransactionPopup'\n\nexport const StyledClose = styled(X)`\n  position: absolute;\n  right: 10px;\n  top: 10px;\n\n  :hover {\n    cursor: pointer;\n  }\n`\nexport const Popup = styled.div`\n  display: inline-block;\n  width: 100%;\n  padding: 1em;\n  background-color: ${({ theme }) => theme.bg1};\n  position: relative;\n  border-radius: 10px;\n  padding: 20px;\n  padding-right: 35px;\n  overflow: hidden;\n\n  ${({ theme }) => theme.mediaWidth.upToSmall`\n    min-width: 290px;\n  `}\n`\nconst Fader = styled.div`\n  position: absolute;\n  bottom: 0px;\n  left: 0px;\n  width: 100%;\n  height: 2px;\n  background-color: ${({ theme }) => theme.bg3};\n`\n\nconst AnimatedFader = animated(Fader)\n\nexport default function PopupItem({\n  removeAfterMs,\n  content,\n  popKey\n}: {\n  removeAfterMs: number | null\n  content: PopupContent\n  popKey: string\n}) {\n  const removePopup = useRemovePopup()\n  const removeThisPopup = useCallback(() => removePopup(popKey), [popKey, removePopup])\n  useEffect(() => {\n    if (removeAfterMs === null) return\n\n    const timeout = setTimeout(() => {\n      removeThisPopup()\n    }, removeAfterMs)\n\n    return () => {\n      clearTimeout(timeout)\n    }\n  }, [removeAfterMs, removeThisPopup])\n\n  const theme = useContext(ThemeContext)\n\n  let popupContent\n  if ('txn' in content) {\n    const {\n      txn: { hash, success, summary }\n    } = content\n    popupContent = <TransactionPopup hash={hash} success={success} summary={summary} />\n  } else if ('listUpdate' in content) {\n    const {\n      listUpdate: { listUrl, oldList, newList, auto }\n    } = content\n    popupContent = <ListUpdatePopup popKey={popKey} listUrl={listUrl} oldList={oldList} newList={newList} auto={auto} />\n  }\n\n  const faderStyle = useSpring({ from: { width: '100%' }, to: { width: '0%' }, config: { duration: removeAfterMs } })\n\n  return (\n    <Popup>\n      <StyledClose color={theme.text2} onClick={removeThisPopup} />\n      {popupContent}\n      {removeAfterMs !== null ? <AnimatedFader style={faderStyle} /> : null}\n    </Popup>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}